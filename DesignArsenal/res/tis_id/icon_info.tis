namespace IconInfo
{
	var _obj_icon;

	function Setup()
	{
		self#btn-info-close.on("click", function() {
			_obj_icon = undefined;
			self#icn-info.hide();
		});

		self#png-sizes.onMouse = function(evt){
			if(evt.type == Event.MOUSE_DRAG_REQUEST && evt.target.$is(div))
			{
				var sz = evt.target.text.toInteger();
				var img = new Image(sz, sz, self#icn-info.$(div));
				var path = view.Host_SavePNG(_obj_icon.arr_tags[0], img.toBytes());
				IconBehavior.PerformFileDrag(path, _obj_icon.hash, function() {}, evt.target);
				evt.target.state.hover = false;
				return true;
			}
		}

		self#info-filename.$(icon).onClick = ::view.Host_RevealFile(_obj_icon.path);
		self#info-collection.$(icon).onClick = ::ListCollection(_obj_icon.source.name);
	}

	function ShowIconInfo(obj_icon)
	{
		_obj_icon = obj_icon;

		var url = isource.IconTranslateURL(obj_icon.hash);

		self#svg-thumb.style#foreground-image = "url(" + url + ")";
		self#svg-thumb.update();
		self#info-area-lib.hide();
		self#info-area-col.hide();

		if(obj_icon.kind == EIconKind.LIBRARY)
		{
			self#info-area-lib.show();
			self#info-pack.text = obj_icon.source.name;
			self#info-pack.@#href = obj_icon.source.url;
			self#info-license.text = obj_icon.source.license;
			self#info-license.@#href = obj_icon.source.licenseURL;

			self#info-tags.clear();
			for(var tag in obj_icon.arr_tags)
				self#info-tags.$append(<span .tag>{tag}</span>);
		} else if(obj_icon.kind == EIconKind.COLLECTION) {
			self#info-area-col.show();

			self#info-filename[0].text = obj_icon.arr_tags[0];
			self#info-collection[0].text = obj_icon.source.name;
			self#info-area-col.update();
		}

		log(obj_icon.colored)
		self#icn-info.@.toggleClass("colored", obj_icon.colored);
		self#icn-info.show();
	}

	function RefreshForIcon(hash)
	{
		if(_obj_icon==undefined)
			return;
		if(_obj_icon.hash == hash)
			ShowIconInfo(_obj_icon);
	}
}