var isource = $(isource);

namespace UI
{
	var _arr_sizes = [12, 16, 20, 30, 40, 60];
	var _arr_spacing = [10, 15, 20, 22, 25, 30];
	var _isize = 2;
	var _inhome = true;

	function Setup()
	{
		Utils.installLinkHandler(self);

		self#back.onClick = 
		self#ui-search.OnClose = ::ShowHome();

		function SetSize(inc) {
			_isize = (_isize + (inc ? 1 : -1)).limit(0,_arr_sizes.length-1);
			self.style.variable("icon-size", px(_arr_sizes[_isize]));
			self#list.style#border-spacing = px(_arr_spacing[_isize]);
			self#list.style#margin-left = px(1);
			self#list.style#margin-left = undefined;
		}

		self#btn-size-up.on("click", ::SetSize(true));
		self#btn-size-up.on("dblclick", ::SetSize(true));
		self#btn-size-down.on("click", ::SetSize(false));
		self#btn-size-down.on("dblclick", ::SetSize(false));
		self#btn-color.onClick = function() {
			self.@#black = self.@#black ? undefined : "true";
		};

		self#scroller.on("~mousewheel", function(evt) {
			if(evt.ctrlKey || evt.commandKey)
			{
				if(evt.wheelDelta != 0)
					SetSize(evt.wheelDelta > 0.1);
				return true;
			}
		});

		self.post(::ShowHome());
	}

	function SetupHome()
	{
		// Section 1: icon packs
		if(!Utils.InDBGView)
		{
			var arr_sources = isource.GetSources();
			for(var (idx, source) in arr_sources)
				self#ui-packsel.options.$append(<option value={idx}>{source.name}</option>);
		}

		self#ui-packsel.on("change", function() {
			ListUI.ListPack(this.value, this.$(option:checked).text);
			self.timer(100, ::self#ui-packsel.value = undefined);
		});

		// Section 2: collections
		self#info-cols.onClick = function() {
			view.Host_RevealDir(Consts.ICONS_DIR);
		};
	}

	function ShowMain()
	{
		if(!_inhome)
			return;
		_inhome = false;

		self#home.hide();
		self#main.show();
		self#back.show();
		self#toolbar.show();
	}

	function ShowHome()
	{
		_inhome = true;
		
		self#ui-search.Clear();
		self#ui-search.OnSearch = :needle:ListUI.ListSearch(needle);

		self#main.hide();
		self#home.show();
		self#icn-info.hide();
		self#btn-search-clear.hide();
		self#back.hide();
		self#toolbar.hide();
	}
}

namespace ListUI
{
	function Setup()
	{
		self#btn-load-more.on("click", function() {
			this.hide();
			LoadItensBulk();
		});

		self#list.on("click", "icn", function(evt) {
			this.state.current = true;
			if(evt.mainButton)
				IconInfo.ShowIconInfo(this.icon);
		});
	}

	function ListSearch(needle)
	{
		isource.ResetByNeedle(needle);
		ResetViewAndLoad();
	}
	
	function ListPack(idx, name)
	{
		self#ui-search.Clear();
		self#ui-search.AddTag("pack: " + name, true);
		self#ui-search.OnSearch = function(needle) {
			isource.ResetBySource(idx, needle);
			ResetViewAndLoad();
		};

		isource.ResetBySource(idx);
		ResetViewAndLoad();
	}


	// Internal
	function ResetViewAndLoad()
	{
		self#btn-search-clear.show();
		self#btn-load-more.hide();
		self#list.clear();
		UI.ShowMain();
		isource.ResetPosOnly();
		LoadItensBulk();

		self.timer(500, function() {
			ShowHint("idlist", "You can drag'n'drop icons to your favorite design tool (Photoshop, Illustrator, XD, Sketch)...<br>You are actually simply dragging a SVG file.", self#list[0]);
		});
	}

	function LoadItensBulk()
	{
		var cnt = 0;
		var hprev = 0;

		self#overflow.hide();

		isource.LoadBulk(function(icon) {
			var el_icon = IconBehavior.Create(icon);

			if(cnt++ >= 120)
			{
				if(self#list.box(#height, #content) > hprev)
				{
					el_icon.remove();

					self#btn-load-more.show();
					return false;
				}
			}
			hprev = self#list.box(#height);
			return true;
		}, function() {
			self#overflow.show();
		});

		if(self#list.length==0)
			self#noicon.show();
		else
			self#noicon.hide();
	}
}

function Setup()
{
	UI.Setup();
	UI.SetupHome();
	ListUI.Setup();
	IconInfo.Setup();
}