include "../lib_settings/settings.tis";

self#btn-menu.onClick = function() {
	self#mi-clearcache.text = "Clear cache";
	this.popup(self#menu-main, Utils.popupAttachment());

	view.Host_CacheSize(function(sz) {
		self#mi-clearcache.html = "Clear cache " + "<em>(" + sz + ")</em>";
	});
};

self#mi-quit.onClick = ::view.Host_Quit();
self#mi-quit.$(accesskey).html = Utils.IsOSX ? "⌘ + Q" : "Ctrl + Q";

self#mi-skiacode.hide();
if(view.Host_IsMidi())
{
	self#mi-skiacode.show();
	self#mi-skiacode.onClick = function() {
		view.dialog({
			url: self.url("dlg_xamarin.html"),
			alignment: 5
		});
	};
}

self#mi-gopro.on("mousedown", function() {
	Sciter.launch("http://designarsenal.co/Home/Pro");
});
self#mi-clearcache.onClick = function() {
	view.Host_ClearCache();

	this.closePopup();
	view.msgbox(#information, "Cache cleared with success.", Consts.APPNAME);
};

var cur_dev_mode;
var arr_selfs = [];

function SetDevMode(mode) {
	var el_btn = self#mi-devmode.$(button);
	Settings.ns_data.devmode = el_btn.state.checked = mode;
	Settings.StoreWork();

	cur_dev_mode = mode;

	for(var (i,el) in arr_selfs) {
		if(mode)
			el.attributes#devmode = true;
		else
		{
			el.attributes.remove("devmode");
			if(View.close_project_func)
				View.close_project_func();
		}
	}
}
SetDevMode(!!Settings.ns_data.devmode);

function RegisterDevmode() {
	arr_selfs.push(this);
	SetDevMode(cur_dev_mode);
}

self#mi-devmode.on("mouseup", function(evt) {
	SetDevMode(!cur_dev_mode);
	return true;
});

if(Utils.IsWindows && !Utils.InDBGView)
{
	self#mi-runstart.on("mouseup", function(evt) {
		var el_btn = this.$(button);
		el_btn.state.checked = !el_btn.state.checked;
		view.Host_RunRegistry(el_btn.state.checked);
		return true;
	});

	self#mi-runstart.$(button).state.checked = view.Host_IsRegistryRun();
}

self#mi-about.onClick = function() {
	this.closePopup();
	view.dialog({
		url: self.url("dlg_about.html"),
		alignment: 5
	});
};